@page "/MudBlazor"
@using API.DTOs
@using API.Services

@inject NavigationManager NavigationManager
@inject TodoService TodoService

<PageTitle>Involved Todo</PageTitle>

<h1>Involved TODO</h1>

@if (_todos == null)
{
    <p><em>Loading data</em></p>
}
else
{
    <input class="form-control" type="text" placeholder="Filter name..."
           @bind="_nameFilter" @bind:after="@GetTodos">
    <input class="form-control" type="text" placeholder="Filter assignee..."
           @bind="_assigneeFilter" @bind:after="@GetTodos">

    <MudTable Items="@_todos" Hover="true" LoadingProgressColor="Color.Info">
        <HeaderContent>
            <MudTh>Title</MudTh>
            <MudTh>Description</MudTh>
            <MudTh>Assignee</MudTh>
            <MudTh></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Title">@context.Title</MudTd>
            <MudTd DataLabel="Description">@context.Description</MudTd>
            <MudTd DataLabel="Assignee">@context.Assignee</MudTd>
            <MudTd DataLabel="Actions">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="()=>UpdateTodo(context.Id)">Update</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="()=>DeleteTodo(context.Id)">Delete TODO</MudButton>

            </MudTd>
        </RowTemplate>
    </MudTable>
}

@code {
    private List<TodoDto>? _todos;

    private string _nameFilter { get; set; }
    private string _assigneeFilter { get; set; }

    protected override void OnInitialized()
    {
        GetTodos();
    }

    protected void DeleteTodo(int id)
    {
        TodoService.Delete(id);
        GetTodos();
    }

    protected void UpdateTodo(int id)
    {
        NavigationManager.NavigateTo($"/Update/{id}");
    }



    private void GetTodos()
    {
        // First implementation
        // _todos = TodoService.GetAll();

        // New implementation with search functionality
        _todos = TodoService.Search(_nameFilter, _assigneeFilter);
    }
}